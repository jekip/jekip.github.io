import{o as n,c as s,a}from"./app.04752255.js";const t='{"title":"BasicForm 表单","description":"","frontmatter":{},"headers":[{"level":2,"title":"基础使用","slug":"基础使用"},{"level":3,"title":"useForm 方式","slug":"useform-方式"},{"level":3,"title":"template 方式","slug":"template-方式"},{"level":2,"title":"useForm","slug":"useform"},{"level":3,"title":"参数介绍","slug":"参数介绍"},{"level":3,"title":"Methods","slug":"methods"},{"level":2,"title":"Props","slug":"props"},{"level":3,"title":"FormSchema","slug":"formschema"}],"relativePath":"components/form.md","lastUpdated":1628048260127}',p={},o=a('<h1 id="basicform-表单"><a class="header-anchor" href="#basicform-表单" aria-hidden="true">#</a> BasicForm 表单</h1><p>对 <code>form</code> 组件进行封装</p><blockquote><p>如果文档内没有，可以尝试在在线示例内寻找</p></blockquote><h2 id="基础使用"><a class="header-anchor" href="#基础使用" aria-hidden="true">#</a> 基础使用</h2><h3 id="useform-方式"><a class="header-anchor" href="#useform-方式" aria-hidden="true">#</a> useForm 方式</h3><p>下面是一个简单表单的示例</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@reset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleReset<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> FormSchema<span class="token punctuation">,</span> useForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/Form/index&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> schemas<span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;NInput&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n        labelMessage<span class="token operator">:</span> <span class="token string">&#39;这是一个提示&#39;</span><span class="token punctuation">,</span>\n        defaultValue<span class="token operator">:</span> <span class="token string">&#39;小马哥&#39;</span><span class="token punctuation">,</span>\n        componentProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n            placeholder<span class="token operator">:</span> <span class="token string">&#39;请输入姓名&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">onInput</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;请输入姓名&#39;</span><span class="token punctuation">,</span> trigger<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> formRef<span class="token operator">:</span> any <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> <span class="token punctuation">{</span> setFieldsValue <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            gridProps<span class="token operator">:</span> <span class="token punctuation">{</span> cols<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            collapsedRows<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n            labelWidth<span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>\n            layout<span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span>\n            schemas<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token keyword">function</span> <span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">function</span> <span class="token function">handleReset</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            schemas<span class="token punctuation">,</span>\n            register<span class="token punctuation">,</span>\n            formRef<span class="token punctuation">,</span>\n            handleSubmit<span class="token punctuation">,</span>\n            handleReset<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="template-方式"><a class="header-anchor" href="#template-方式" aria-hidden="true">#</a> template 方式</h3><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span>\n        <span class="token attr-name">submitButtonText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交预约<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>horizontal<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:gridProps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ cols: 1 }<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:schemas</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#statusSlot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ model, field }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>n-input</span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model[field]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BasicForm</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> FormSchema <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/Form/index&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> schemas<span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;NInput&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n        labelMessage<span class="token operator">:</span> <span class="token string">&#39;这是一个提示&#39;</span><span class="token punctuation">,</span>\n        defaultValue<span class="token operator">:</span> <span class="token string">&#39;小马哥&#39;</span><span class="token punctuation">,</span>\n        componentProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n            placeholder<span class="token operator">:</span> <span class="token string">&#39;请输入姓名&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">onInput</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;请输入姓名&#39;</span><span class="token punctuation">,</span> trigger<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> formRef<span class="token operator">:</span> any <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token keyword">function</span> <span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">function</span> <span class="token function">handleReset</span><span class="token punctuation">(</span><span class="token parameter">values<span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            schemas<span class="token punctuation">,</span>\n            formRef<span class="token punctuation">,</span>\n            handleSubmit<span class="token punctuation">,</span>\n            handleReset<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="useform"><a class="header-anchor" href="#useform" aria-hidden="true">#</a> useForm</h2><p>form 组件还提供了 <code>useForm</code>，方便调用函数内部方法</p><h3 id="参数介绍"><a class="header-anchor" href="#参数介绍" aria-hidden="true">#</a> 参数介绍</h3><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> methods<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p><strong>参数 props 内的值可以是 computed 或者 ref 类型</strong></p><p><strong>register</strong></p><p>register 用于注册 <code>useForm</code>，如果需要使用 <code>useForm</code> 提供的 api，必须将 register 传入组件的 <code>onRegister</code></p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        register<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><code>Methods</code>见下方说明</p><h3 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h3><p><strong>getFieldsValue</strong></p><p>类型: <code>() =&gt; Recordable;</code></p><p>说明: 获取表单值</p><p><strong>setFieldsValue</strong></p><p>类型: <code>&lt;T&gt;(values: T) =&gt; Promise&lt;void&gt;</code></p><p>说明: 设置表单字段值</p><p><strong>resetFields</strong></p><p>类型: <code>()=&gt; Promise&lt;any&gt;</code></p><p>说明: 重置表单值</p><p><strong>validate</strong></p><p>类型: <code>(nameList?: NamePath[]) =&gt; Promise&lt;any&gt;</code></p><p>说明: 校验整个表单</p><p><strong>submit</strong></p><p>类型: <code>() =&gt; Promise&lt;void&gt;</code></p><p>说明: 提交表单</p><p><strong>clearValidate</strong></p><p>类型: <code>(name?: string | string[]) =&gt; Promise&lt;void&gt;</code></p><p>说明: 清空校验</p><p><strong>setProps</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>设置表单的 props 可以直接在标签上传递，也可以使用 setProps，或者初始化直接写 useForm(props)</p></div><p>类型: <code>(formProps: Partial&lt;FormProps&gt;) =&gt; Promise&lt;void&gt;</code></p><p>说明: 设置表单 Props</p><h2 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><div class="tip custom-block"><p class="custom-block-title">温馨提醒</p><p>除以下参数外，官方文档内的 props 也都支持，具体可以参考 <a href="https://www.naiveui.com/zh-CN/os-theme/components/form" target="_blank" rel="noopener noreferrer">naiveui form</a></p><p><code>gridProps</code> 和 <code>giProps</code> <a href="https://www.naiveui.com/zh-CN/os-theme/components/grid" target="_blank" rel="noopener noreferrer">配置参考</a></p></div><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td>layout</td><td><code>string</code></td><td><code>false</code></td><td><code>inline/Horizontal</code></td><td>表单布局方式</td><td></td></tr><tr><td>schemas</td><td><code>schema[]</code></td><td>-</td><td>-</td><td>表单配置，见下方 <code>FormSchema</code> 配置</td><td></td></tr><tr><td>submitOnReset</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>重置时是否提交表单</td><td></td></tr><tr><td>gridProps</td><td><code>Partial&lt;grid&gt;</code></td><td>-</td><td>-</td><td>配置表单栅格，详情见 <code>grid</code>组件</td><td></td></tr><tr><td>giProps</td><td><code>Partial&lt;gi&gt;</code></td><td>-</td><td>-</td><td>配置表单栅格，详情见 <code>gi</code>组件</td><td></td></tr><tr><td>baseGridStyle</td><td><code>object</code></td><td>-</td><td>-</td><td>配置 Grid 的 style 样式</td><td></td></tr><tr><td>isFull</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>组件是否width 100%，表单内所有组件适用</td><td></td></tr><tr><td>labelWidth</td><td><code>number , string</code></td><td>-</td><td>-</td><td>form 内 label 宽度，表单内所有组件适用</td><td></td></tr><tr><td>labelPlacement</td><td><code>string</code></td><td><code>left</code></td><td><code>left/top</code></td><td>标签位置</td><td></td></tr><tr><td>size</td><td><code>small</code></td><td><code>medium</code></td><td><code>&#39;large&#39;</code></td><td>向表单内所有组件传递 size 参数,自定义组件需自行实现 size 接收</td><td></td></tr><tr><td>collapsed</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>是否折叠表单</td><td></td></tr><tr><td>collapsedRows</td><td><code>number</code></td><td>1</td><td>-</td><td>默认展示的grid行数</td><td></td></tr><tr><td>disabled</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>向表单内所有组件传递 disabled 属性</td><td></td></tr><tr><td>inline</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>是否展示为行内表单</td><td></td></tr><tr><td>showAdvancedButton</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>是否显示收起展开按钮</td><td></td></tr><tr><td>showActionButtonGroup</td><td><code>boolean</code></td><td><code>true</code></td><td><code>true/false</code></td><td>是否显示操作按钮(重置/提交)</td><td></td></tr><tr><td>showResetButton</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>是否显示重置按钮</td><td></td></tr><tr><td>resetButtonOptions</td><td><code>object</code></td><td></td><td>-</td><td>重置按钮配置见下方 ActionButtonOption</td><td></td></tr><tr><td>showSubmitButton</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>是否显示提交按钮</td><td></td></tr><tr><td>submitButtonOptions</td><td><code>object</code></td><td></td><td>-</td><td>确认按钮配置见下方 ActionButtonOption</td><td></td></tr><tr><td>resetButtonText</td><td><code>string</code></td><td>重置</td><td>-</td><td>重置按钮文字</td><td></td></tr><tr><td>submitButtonText</td><td><code>string</code></td><td>查询</td><td>-</td><td>确认按钮文字</td><td></td></tr><tr><td>resetFunc</td><td><code> () =&gt; Promise&lt;void&gt;</code></td><td></td><td>-</td><td>自定义重置按钮逻辑<code>() =&gt; Promise&lt;void&gt;;</code></td><td></td></tr><tr><td>submitFunc</td><td><code> () =&gt; Promise&lt;void&gt;</code></td><td></td><td>-</td><td>自定义提交按钮逻辑<code>() =&gt; Promise&lt;void&gt;;</code></td><td></td></tr></tbody></table><h3 id="formschema"><a class="header-anchor" href="#formschema" aria-hidden="true">#</a> FormSchema</h3><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th></tr></thead><tbody><tr><td>field</td><td><code>string</code></td><td>-</td><td>-</td><td>字段名</td></tr><tr><td>label</td><td><code>string</code></td><td>-</td><td>-</td><td>标签名</td></tr><tr><td>labelMessage</td><td><code>string , string[]</code></td><td>-</td><td>-</td><td>标签名右侧温馨提示</td></tr><tr><td>labelMessageStyle</td><td><code>object, string</code></td><td>-</td><td>-</td><td>标签名右侧样式</td></tr><tr><td>defaultValue</td><td><code>any</code></td><td>-</td><td>-</td><td>所渲渲染组件的初始值</td></tr><tr><td>component</td><td><code>string</code></td><td>-</td><td>-</td><td>组件类型，见下方 ComponentType</td></tr><tr><td>componentProps</td><td><code>any,()=&gt;{}</code></td><td>-</td><td>-</td><td>所渲染的组件的 props 和 事件，请参考 naiveui 为了简化使用，和官方保持一致</td></tr><tr><td>slot</td><td><code>string</code></td><td>-</td><td>-</td><td>自定义 slot，渲染组件</td></tr><tr><td>suffix</td><td><code>string</code></td><td>-</td><td>-</td><td>组件后面的内容，返回值，{<code>value</code>,<code>model</code>,<code>field</code>}</td></tr><tr><td>rules</td><td><code>object[]</code></td><td>-</td><td>-</td><td>校验规则 参考 naiveui form 组件 validation</td></tr><tr><td>giProps</td><td><code>Partial&lt;gi&gt;</code></td><td>-</td><td>-</td><td>配置表单栅格，详情见 <code>gi</code>组件</td></tr><tr><td>isFull</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>组件是否width 100%，优先级最高</td></tr></tbody></table><p><strong>ComponentType</strong></p><div class="tip custom-block"><p class="custom-block-title">温馨提醒</p><p>schema 内组件的可选类型，目前只测试了如下组件，实际上只要支持 v-model:value 表单组件理论上都支持，</p><p>组件存在子标签组件，需要单独增加，比如： 选项组 NCheckboxGroup 嵌套 NCheckbox 等...</p></div><div class="language-tsx"><pre><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ComponentType</span> <span class="token operator">=</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NInput&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;InputNumber&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NSelect&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NRadioGroup&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NCheckbox&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NCheckboxGroup&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NDatePicker&#39;</span>\n  <span class="token operator">|</span> <span class="token string">&#39;NSwitch&#39;</span><span class="token punctuation">;</span>\n</code></pre></div>',49);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
